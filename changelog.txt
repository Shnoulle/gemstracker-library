Important changes from 1.5.x => 1.6
============================================================
Reception codes moved from Util to Tracker, update should warn for local classes
--> Scan your own code for reference to Gems_Util_ReceptionCode or util->getReceptionCode

Important changes from 1.5.5 => 1.5.6
============================================================
Transparent lessCss compiling was added. When you add a .less file GemsTracker will take care of compiling it to css. If you need to force a recompile, add the ?compilecss parameter to your url.
Events can be specified at the GemsTracker level as well as the project level
Surveys can now have their own survey specific display, in a manner similar to event system
Several interface bugs/improvements were solved/written

Important changes from 1.5.4 => 1.5.5
============================================================
New default: user can only login to his own organization and needs to switch after login if desired, to enable old behaviour that could lead to problems with duplicate logins see $allowLoginOnOtherOrganization in Gems_User_UserLoader
Role editing has become more interactive and safer to use
Internally code no longer uses the 'Hidden Organization' but expects both an id1/patientNr plus an id2/organizationId to be specified
Externally the organization id is still left out of the url when not needed
UPGRADE WARNING: Check all your (snippet) extensions to RespondentAction, TrackAction, SurveyAction and project specific versions of ShowTrackTokenSnippet and ShowSingleSurveySnippet: you may need to specify extra parameters as the menu items need to know the organization id
New projects start with a basic css template
In project.ini, export.wkhtmltopdf has been renamed to export.pdfExportCommand, and which now stores the entire command line to the pdf export binary (wkhtmltopdf, Phantom.js or similar).
The normal time it takes to answer a survey can be added and surveys have a code field
Export of survey data can be selected by respondent id or by track
Track and survey maintenance is extended with round and field deletion and more powerfull selection tools
All maintenance tasks show some explanation on what they do
New default: Forms are no longer lazy by default. Use $form->setLazy(true) if you need it
New setting: in project.ini you can set cache to any of "none", "apc", "file" to influence what kind of cache to use

Important changes from 1.5.3 => 1.5.4
============================================================
New logLevel project.ini setting
Added export of all patient data on a single page or PDF (if binary specified in project.ini)
Fixed a lot of issues with staff not being able to login or not being created
Fixed handling of token return on multi-url sites
Added maximum number of reminders sent to tokens
Fixed several date display and editing issues

Important changes from 1.5.2 => 1.5.3
============================================================
People can login using their e-mail address as user name. This can be activated by for respondents and staff seperately, by default this is off for both.
Showing a list of organizations to choose during login happens always except when 1) there is only one organization or 2) a url is used that is assigned to a specific organization.
Login & other password forms are now easy to customize on a per project basis.
Login and authorization rules are easier to extend.
All password rules are reported on change password forms.
The password reset cycle send a link that can be used to change the password straight away. By default the systems also asks the user to enter his/her birthday if available and username otherwise, but this can be removed / changed at the project level.

Important changes from 1.5.1 => 1.5.2
============================================================
Renamed project.ini setting concentRejected to consentRejected
Default consent can be changed from 'Unknown' to something else in Project.ini setting consentDefault, please check local respondentController

Important changes from 1.5.0 => 1.5.1
============================================================
New event introduced: TrackCompletedEvent

Important changes from 1.4.3 => 1.5
============================================================
Passwords should be set with a project.ini->salt. Salt is now a required project setting!
Setting rules for user passwords has changed and has become more powerfull, unless you do not set them.
The table gems__staff is split into gems__staff, gems__user_logins with generic login data and gems__users_passwords containing db stored password information.
GemsEscort->afterLogin(), ->afterLogout() and ->loadLoginInfo(0 are now all handled by Gems_User_UserDefinitionInterface objects.
GemsEscort->session kept for compatibility reasons, but use should be stopped.
The table gems__user_ids provides unique and non-sequential user ids accross gems__staff and gems__respondents.
The gems__respondent.grs_bsn has been renamed to grs_ssn, to make the code more international.
MailController is now called MailTemplateController.
EmailController is now called CronController (with stub for compatibility).
ModelAbstract now declares an protected _load instead of a public load abstract, for implementation of setOnLoad() functions, check your own Models for overloading load() or loadXX() functions.

Important changes from 1.4.2 => 1.4.3
============================================================
 * gtr_organisations renamed to gtr_organizations
 * table gems__countries is no longer in use

Important changes from 1.4.1 => 1.4.2
============================================================
 * To have an autosubmit form it is enough now to just use $form->setAutoSubmit($href, $targetId)
 * Introduced Gems_FormattedData, which takes a model and array of data and applies all formatting rules to the data
   (see export for more info)
 * The menu is reorganised and some items no longers have privileges assigned to them. Be careful with project menus!
 * Tooltip decorator now uses jQuery icon instead of an image
 * Print view of tab-forms now output the tab-titles for better readability, this introduced the class print-only

Important changes from 1.4 => 1.4.1
============================================================
 * Menu containers no longer have a privilege, this could have impact on custom menu's searching for a container.
 * Default layouts have changed to make displaying the project name optional. To display the project name
   add the following line to the project.ini:
       layoutPrepare.projectName = header


============================================================
Library changes for 1.3 => 1.4

- New track engine, all code from Gems_Source and Gems_Token to Gems_Tracker
- Moved snippets from MUtil_Controller to their own top level package MUtil_Snippets, this allows snippets to load snippets
- The backwards compatible Gems_Menu extensions Gems_Menu->getParameterSource() and Gems_Menu->getMenuList() are easier to use than their predecessors.

Some examples:

Checking for token completion:
Old:
    $tokenLibrary = Gems_Tokens::getLibrary($this->db);
    $tokenLibrary->checkAnswers($data['grs_id_user'], $this->session->user_id);
New:
    $this->loader->getTracker()->processCompletedTokens($data['grs_id_user'], $this->session->user_id);

Getting the survey questions:
Old:
    $source     = Gems_Sources::getBySurveyId($this->gsu_id);
    $this->data = $source->getSurveyQuestions($this->gsu_id, $this->locale);
New:
    $survey = $this->loader->getTracker()->getSurvey($this->gsu_id);
    $this->data = $survey->getQuestionInformation($this->locale->getLanguage());

Getting answers:
Old:
    Gems_Tokens::getAnswers($currentToken['gto_id_token'], $first));
New:
    $token = $this->loader->getTracker()->getToken($currentToken['gto_id_token']);
    $token->getRawAnswers();
or formatted:
    $model = $token->getSurveyAnswerModel($this->locale->getLanguage());
    $model->applyRequest($this->request);
    $model->loadFirst();
    etc...

getting a token model:
Old:
    $this->loader->getModels()->getTokenModel('T' == $this->trackType);
New for generic token model:
    $this->loader->getTracker()->getTokenModel();
Or for token specific detail show & edit:
    $this->loader->getToken('xxxx-xxxx')->getModel();

Getting a respondent model:
Old:
    $model = GemsEscort::getInstance()->getLoader()->getModels()->getTrackModel('TrackModel');
New:
    $model = $model = $this->loader->getTracker()->getTrackModel();

New changes directories:
    application/controllers/snippets => application/snippets
    library/Gems/controllers/snippets => library/Gems/snippets
    library/Gems/classes/MUtil/Controller/snippets => library/Gems/classes/MUtil/Snippets/Standard

Changes to snippet classes:
    MUtil_Controller_SnippetAbstract => MUtil_Snippets_SnippetAbstract
    MUtil_Controller_SnippetInterface => MUtil_Snippets_SnippetInterface
    MUtil_Controller_TabSnippetAbstract => MUtil_Snippets_TabSnippetAbstract
    etc...
    MUtil_Controller_*Snippet* => MUtil_Snippets_*Snippet*
But also:
    Gems_Controller_Snippets_* => Gems_Snippets_*

Replaced individual snippets
    SingleAnswerTableSnippet => AnswerModelSnippet
    AnswersTableSnippet => TrackAnswersModelSnippet

